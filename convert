alias draw.io='/Applications/draw.io.app/Contents/MacOS/draw.io'
mkdir -p images/
draw.io --export --format png --scale 2 --output images/ diagrams/
draw.io --export --format svg --output images/ diagrams/
# find images/ -name '*.svg' -print0 | xargs -0 sed -i "" 's|<defs>|<defs><style>@font-face {font-family: "Architects Daughter";src: url(../webfonts/architectsdaughter.woff2) format("woff2");}</style>|g'
# find images/ -name '*.svg' -print0 | xargs -0 sed -i "" 's|<defs/>|<defs><style>@font-face {font-family: "Architects Daughter";src: url(../webfonts/architectsdaughter.woff2) format("woff2");}</style></defs>|g'

# requires installation
#
# brew install imagemagick
convert images/google-cloud-bigquery.png -splice 350x0 -extent 3175x1709 images/google-cloud-bigquery_card.png
convert images/aws-s3-athena.png -splice 350x0 -extent 3175x1709 images/aws-s3-athena_card.png
convert images/azure-synapse-analytics.png -splice 350x0 -extent 3175x1709 images/azure-synapse-analytics_card.png
convert images/dbt-snowflake.png -splice 350x0 -extent 3175x1709 images/dbt-snowflake_card.png
convert images/databricks.png -splice 350x0 -extent 3175x1709 images/databricks_card.png

# requires installation
#
# brew install webp
for i in images/*.png; do
    [ -f "$i" ] || break
    cwebp -q 100 -quiet -lossless "$i" -o "$i.webp"
done


convert -bordercolor white -border 50 data-product-canvas-template.png data-product-canvas-template_with-border.png
docker run --rm -it -v "`pwd`:/app" -w /app minidocks/img2pdf --pagesize A0^T -o data-product-canvas-template_v1.pdf data-product-canvas-template_with-border.png
rm data-product-canvas-template_with-border.png